web:
  build: .
  command: cds run -h 0.0.0.0 -p 5000 --debugger
  environment:
    - "APP_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
    - "APP_BROKER_URL=amqp://guest:guest@mq:5672//"
    - "APP_CACHE_REDIS_URL=redis://cache:6379/0"
    - "APP_CACHE_TYPE=redis"
    - "APP_CELERY_RESULT_BACKEND=redis://cache:6379/2"
    - "APP_SEARCH_ELASTIC_HOSTS=es:9200"
    - "APP_SECRET_KEY=CHANGE_ME"
    - "APP_SQLALCHEMY_DATABASE_URI=postgresql://cds:cds@db/cds"
  links:
    - cache
    - es
    - mq
    - db
  ports:
    - "5000:5000"
  restart: "always"
  volumes_from:
    - static

worker:
  build: .
  command: "celery worker -A cds.celery --loglevel=INFO"
  environment:
    - "APP_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
    - "APP_BROKER_URL=amqp://guest:guest@mq:5672//"
    - "APP_CACHE_REDIS_URL=redis://cache:6379/0"
    - "APP_CACHE_TYPE=redis"
    - "APP_CELERY_RESULT_BACKEND=redis://cache:6379/2"
    - "APP_SEARCH_ELASTIC_HOSTS=es:9200"
    - "APP_SECRET_KEY=CHANGE_ME"
    - "APP_SQLALCHEMY_DATABASE_URI=postgresql://cds:cds@db/cds"
  links:
    - cache
    - es
    - mq
    - db
  volumes_from:
    - static

cache:
  image: redis
  read_only: true
  ports:
    - "26379:6379"
  restart: "always"

db:
  image: postgres
  command: postgres
  environment:
    - "POSTGRES_USER=cds"
    - "POSTGRES_PASSWORD=cds"
    - "POSTGRES_DB=cds"
  ports:
    - "25432:5432"
  read_only: false

mq:
  restart: "always"
  image: rabbitmq
  ports:
    - "24369:4369"
    - "45672:25672"

es:
  build: ./docker/es/
  ports:
    - "29200:9200"
    - "29300:9300"
  restart: "always"

static:
  build: .
  restart: "no"
  # user: cds
  volumes:
    - "/usr/local/var/instance/static"
    # - ".:/code/cds"

nginx:
  build: ./docker/nginx/
  links:
    - web
  ports:
    - "80:80"
  restart: "always"
  volumes_from:
    - static